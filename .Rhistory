abs(TWbefore_averages[,-1]-comb_averages[,-1])
TWbefore_differences = TWbefore_averages[,-1]-comb_averages[,-1]
comb_averages[1]
TWbefore_differences$Vowel <- comb_averages[1]
View(TWbefore_differences)
TWbefore_differences[,c[12,1,2,3,4,5,6,7,8,9,10,11]]
TWbefore_differences[,c(12,1,2,3,4,5,6,7,8,9,10,11)]
TWbefore_differences <- TWbefore_differences[,c(12,1,2,3,4,5,6,7,8,9,10,11)]
View(TWbefore_differences)
TWbefore_differences
sqrt(TWbefore_differences$`F1 20%`^2+TWbefore_differences$`F2 20%`)
library(phonR)
TWbefore$F120B <- normBark(TWbefore$`F1 20%`)
TWbefore$F150B <- normBark(TWbefore$`F1 50%`)
TWbefore$F180B <- normBark(TWbefore$`F1 80%`)
TWbefore$F220B <- normBark(TWbefore$`F2 20%`)
TWbefore$F250B <- normBark(TWbefore$`F2 50%`)
TWbefore$F280B <- normBark(TWbefore$`F2 80%`)
TWbefore$F320B <- normBark(TWbefore$`F3 20%`)
TWbefore$F350B <- normBark(TWbefore$`F3 50%`)
TWbefore$F380B <- normBark(TWbefore$`F3 80%`)
library(phonR)
aggregate(comb[,5:], list(comb$Vowel), mean)
aggregate(comb[,5:21], list(comb$Vowel), mean)
aggregate(comb[,5:24], list(comb$Vowel), mean)
comb_averages <- aggregate(comb[,5:24], list(comb$Vowel), mean)
View(comb_averages)
TWbefore_averages <- aggregate(comb[,5:24], list(comb$Vowel), mean)
View(TWbefore_averages)
#calculate averages per vowel, save in new DF
TWbefore_averages <- aggregate(comb[,5:24], list(comb$Vowel), mean)
#calculate distance
TWbefore_differences <- TWbefore_averages[,-1]-comb_averages[,-1]
#calculate distance
TWbefore_differences <- TWbefore_averages[,-1]-comb_averages[,-1]
TWbefore_differences <- TWbefore_differences[,c(24,1,2,3,4,5,6,7,8,9,10,
View(TWbefore_differences)
TWbefore_averages[,-1]-comb_averages[,-1]
TWbefore_averages[,-1]-comb_averages[,-1]
View(comb_averages)
TWbefore_averages <- aggregate(TWbefore[,5:24], list(TWbefore$Vowel), mean)
#calculate distance
TWbefore_differences <- TWbefore_averages[,-1]-comb_averages[,-1]
TWbefore_differences <- TWbefore_differences[,c(24,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23)]
TWbefore_differences <- TWbefore_differences[,c(23,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22)]
TWbefore_differences <- TWbefore_averages[,-1]-comb_averages[,-1]
TWbefore_differences$Vowel <- comb_averages[1]
TWbefore_differences <- TWbefore_differences[,c(24,1
View(TWbefore_differences)
#calculate distance
TWbefore_differences <- TWbefore_averages[,-1]-comb_averages[,-1]
TWbefore_differences <- TWbefore_differences[,c(24,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23)]
TWbefore_differences$Vowel <- comb_averages[1]
TWbefore_differences <- TWbefore_differences[,c(24,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23)]
TWbefore_differences$Vowel <- comb_averages[1]
View(TWbefore_differences)
TWbefore_differences <- TWbefore_differences[,c(21,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)]
names(comb_averages)[names(comb_averages) == 'Vowel.Group.1'] <- 'Vowel'
View(TWbefore_differences)
names(TWbefore_differences)[names(TWbefore_differences) == 'Vowel.Group.1'] <- 'Vowel'
View(TWbefore_differences)
names(TWbefore_differences)[names(TWbefore_differences) == 'Vowel.Group.1'] <- 'Vowel'
View(TWbefore_differences)
sqrt(TWbefore_differences$F120B^2+TWbefore_differences$F220B)
sqrt(TWbefore_differences$F120B^2+TWbefore_differences$F220B^2)
TWbefore_differences$eucF1F2 <- sqrt(TWbefore_differences$F120B^2+TWbefore_differences$F220B^2)
rm(TWbefore_differences$eucF1F2)
TWbefore_differences$eucF120F220 <- sqrt(TWbefore_differences$F120B^2+TWbefore_differences$F220B^2)
#Euclidian distance (barks)
TWbefore_differences$eucF120F220 <- sqrt(TWbefore_differences$F120B^2+TWbefore_differences$F220B^2)
TWbefore_differences$eucF150F250 <- sqrt(TWbefore_differences$F150B^2+TWbefore_differences$F250B^2)
TWbefore_differences$eucF180F280 <- sqrt(TWbefore_differences$F180B^2+TWbefore_differences$F280B^2)
#calculate averages per vowel, save in new DF
TWafter_averages <- aggregate(TWafter[,5:24], list(TWafter$Vowel), mean)
#calculate distance
TWafter_differences <- TWafter_averages[,-1]-comb_averages[,-1]
TWafter_differences$Vowel <- comb_averages[1]
TWafter_differences <- TWafter_differences[,c(21,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)]
names(TWafter_differences)[names(TWafter_differences) == 'Vowel.Group.1'] <- 'Vowel'
#Euclidian distance (barks)
TWafter_differences$eucF120F220 <- sqrt(TWafter_differences$F120B^2+TWafter_differences$F220B^2)
TWafter_differences$eucF150F250 <- sqrt(TWafter_differences$F150B^2+TWafter_differences$F250B^2)
TWafter_differences$eucF180F280 <- sqrt(TWafter_differences$F180B^2+TWafter_differences$F280B^2)
#calculate averages per vowel, save in new DF
TWafter_differences <- data.frame(Vowel=character(),EndTime=double(),duration=double(),F120=double(),F150=double(),F180=double(),F220=double(),F250=double(),F280=double(),F320=double(),F350=double(),F380=double())
TWafter_averages <- aggregate(TWafter[,5:24], list(TWafter$Vowel), mean)
#calculate distance
TWafter_differences <- TWafter_averages[,-1]-comb_averages[,-1]
TWafter_differences$Vowel <- comb_averages[1]
TWafter_differences <- TWafter_differences[,c(21,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)]
names(TWafter_differences)[names(TWafter_differences) == 'Vowel.Group.1'] <- 'Vowel'
#Euclidian distance (barks)
TWafter_differences$eucF120F220 <- sqrt(TWafter_differences$F120B^2+TWafter_differences$F220B^2)
TWafter_differences$eucF150F250 <- sqrt(TWafter_differences$F150B^2+TWafter_differences$F250B^2)
TWafter_differences$eucF180F280 <- sqrt(TWafter_differences$F180B^2+TWafter_differences$F280B^2)
View(TWafter_differences)
#calculate averages per vowel, save in new DF
#TWafter_differences <- data.frame(Vowel=character(),EndTime=double(),duration=double(),F120=double(),F150=double(),F180=double(),F220=double(),F250=double(),F280=double(),F320=double(),F350=double(),F380=double())
TWafter_averages <- aggregate(TWafter[,5:24], list(TWafter$Vowel), mean)
#calculate distance
TWafter_differences <- TWafter_averages[,-1]-comb_averages[,-1]
TWafter_differences$Vowel <- comb_averages[1]
TWafter_differences <- TWafter_differences[,c(21,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)]
names(TWafter_differences)[names(TWafter_differences) == 'Vowel.Group.1'] <- 'Vowel'
#Euclidian distance (barks)
TWafter_differences$eucF120F220 <- sqrt(TWafter_differences$F120B^2+TWafter_differences$F220B^2)
TWafter_differences$eucF150F250 <- sqrt(TWafter_differences$F150B^2+TWafter_differences$F250B^2)
TWafter_differences$eucF180F280 <- sqrt(TWafter_differences$F180B^2+TWafter_differences$F280B^2)
library(phonR)
TWafter$F120B <- normBark(TWafter$`F1 20%`)
TWafter$F150B <- normBark(TWafter$`F1 50%`)
TWafter$F180B <- normBark(TWafter$`F1 80%`)
TWafter$F220B <- normBark(TWafter$`F2 20%`)
TWafter$F250B <- normBark(TWafter$`F2 50%`)
TWafter$F280B <- normBark(TWafter$`F2 80%`)
TWafter$F320B <- normBark(TWafter$`F3 20%`)
TWafter$F350B <- normBark(TWafter$`F3 50%`)
TWafter$F380B <- normBark(TWafter$`F3 80%`)
View(TWafter)
#calculate averages per vowel, save in new DF
#TWafter_differences <- data.frame(Vowel=character(),EndTime=double(),duration=double(),F120=double(),F150=double(),F180=double(),F220=double(),F250=double(),F280=double(),F320=double(),F350=double(),F380=double())
TWafter_averages <- aggregate(TWafter[,5:24], list(TWafter$Vowel), mean)
#calculate distance
TWafter_differences <- TWafter_averages[,-1]-comb_averages[,-1]
TWafter_differences$Vowel <- comb_averages[1]
TWafter_differences <- TWafter_differences[,c(21,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)]
names(TWafter_differences)[names(TWafter_differences) == 'Vowel.Group.1'] <- 'Vowel'
#Euclidian distance (barks)
TWafter_differences$eucF120F220 <- sqrt(TWafter_differences$F120B^2+TWafter_differences$F220B^2)
TWafter_differences$eucF150F250 <- sqrt(TWafter_differences$F150B^2+TWafter_differences$F250B^2)
TWafter_differences$eucF180F280 <- sqrt(TWafter_differences$F180B^2+TWafter_differences$F280B^2)
View(TWafter_differences)
View(TWbefore_differences)
View(comb_averages)
t.test(TWbefore_differences$eucF150F250~TWafter_differences$eucF150F250)
t.test(TWbefore_differences$eucF150F250,TWafter_differences$eucF150F250)
View(TWbefore_averages)
View(TWafter_averages)
View(TWbefore)
View(TWafter)
t.test(TWbefore$F120B,TWafter_differences$F220B)
t.test(TWbefore$F120B,TWafter$F120B)
cm <- combn(colnames(TWafter[,3]), 2)
split(TWafter, TWafter$Vowel)
install.packages("dplyr")
install.packages("broom")
library(dplyr)
library(broom)
TWtest <- TWafter %>%
group_by(Vowel) %>%
do(tidy(t.test(.$F120B,
TWbefore$F120B,
mu = 0,
alt = "two.sided",
paired = TRUE,
conf.level = 0.95))))
TWtest <- TWafter %>%
group_by(Vowel) %>%
do(tidy(t.test(.$F120B,
TWbefore$F120B,
mu = 0,
alt = "two.sided",
paired = TRUE,
conf.level = 0.95)))
lapply(TWafter[7:9], function(x)
t.test(x ~ TWafter$group, paired = TRUE, na.action = na.pass))
lapply(TWafter[7:9], function(x)
t.test(x ~ TWafter$Vowel, paired = TRUE, na.action = na.pass))
t.test(TWbefore$F120B,TWafter$F120B)
t.test(TWbefore$F120B[Vowel=="u"],TWafter$F120B[Vowel=="u"])
t.test(TWbefore$F120B[TWbefore$Vowel=="u"],TWafter$F120B[TWafter$Vowel=="u"])
t.test(TWbefore$F120B[TWbefore$Vowel=="ɑ"],TWafter$F120B[TWafter$Vowel=="ɑ"])
t.test(TWbefore$F120B[TWbefore$Vowel=="œ"],TWafter$F120B[TWafter$Vowel=="œ"])
t.test(TWbefore$F120B[TWbefore$Vowel=="ʏ"],TWafter$F120B[TWafter$Vowel=="ʏ"])
t.test(TWbefore$F120B[TWbefore$Vowel=="ɔ"],TWafter$F120B[TWafter$Vowel=="ɔ"])
t.test(TWbefore$F120B[TWbefore$Vowel=="ɛ"],TWafter$F120B[TWafter$Vowel=="ɛ"])
View(TWafter_averages)
#t-tests
t.test(TWbefore$F150B[TWbefore$Vowel=="u"],TWafter$F150B[TWafter$Vowel=="u"])
t.test(TWbefore$F150B[TWbefore$Vowel=="ɑ"],TWafter$F150B[TWafter$Vowel=="ɑ"])
t.test(TWbefore$F150B[TWbefore$Vowel=="œ"],TWafter$F150B[TWafter$Vowel=="œ"])
t.test(TWbefore$F150B[TWbefore$Vowel=="ʏ"],TWafter$F150B[TWafter$Vowel=="ʏ"])
t.test(TWbefore$F150B[TWbefore$Vowel=="ɔ"],TWafter$F150B[TWafter$Vowel=="ɔ"])
t.test(TWbefore$F150B[TWbefore$Vowel=="ɛ"],TWafter$F150B[TWafter$Vowel=="ɛ"])
View(TWbefore)
View(TWafter)
library(readxl)
YZ_after_results_enc <- read_excel("Desktop/YZ Annotated/YZ_after_results_enc.xlsx")
View(YZ_after_results_enc)
library(readxl)
YZ_before <- read_excel("Desktop/YZ Annotated/YZ_before_results_enc.xlsx",
sheet = "Sheet1")
View(YZ_before)
YZbefore <- YZ_before
YZafter <- YZ_after_results_enc
rm(YZ_before)
rm(YZ_after_results_enc)
View(YZafter)
View(YZbefore)
#normalize into barks
library(phonR)
library(phonR)
YZbefore$F150B <- normBark(YZbefore$`F1 20%`)
YZbefore$F150B <- normBark(YZbefore$`F1 50%`)
YZbefore$F180B <- normBark(YZbefore$`F1 80%`)
YZbefore$F220B <- normBark(YZbefore$`F2 20%`)
YZbefore$F250B <- normBark(YZbefore$`F2 50%`)
YZbefore$F280B <- normBark(YZbefore$`F2 80%`)
YZbefore$F320B <- normBark(YZbefore$`F3 20%`)
YZbefore$F350B <- normBark(YZbefore$`F3 50%`)
YZbefore$F380B <- normBark(YZbefore$`F3 80%`)
#normalize into barks
library(phonR)
YZafter$F150B <- normBark(YZafter$`F1 20%`)
YZafter$F150B <- normBark(YZafter$`F1 50%`)
YZafter$F180B <- normBark(YZafter$`F1 80%`)
YZafter$F220B <- normBark(YZafter$`F2 20%`)
YZafter$F250B <- normBark(YZafter$`F2 50%`)
YZafter$F280B <- normBark(YZafter$`F2 80%`)
YZafter$F320B <- normBark(YZafter$`F3 20%`)
YZafter$F350B <- normBark(YZafter$`F3 50%`)
YZafter$F380B <- normBark(YZafter$`F3 80%`)
View(YZafter)
rm(YZafter$Date)
YZafter$Date <- NULL
View(YZafter)
YZafter$Settings <- NULL
YZafter$Analyst <- NULL
YZafter`Praat Version` <- NULL
YZafter$OS <- NULL
YZafter$`Praat Version` <- NULL
View(YZafter)
YZbefore$Settings <- NULL
YZbefore$Date <- NULL
YZbefore$Analyst <- NULL
YZbefore$`Praat Version` <- NULL
YZbefore$OS <- NULL
View(YZbefore)
#calculate averages per vowel, save in new DF
#TWafter_differences <- data.frame(Vowel=character(),EndTime=double(),duration=double(),F120=double(),F150=double(),F180=double(),F220=double(),F250=double(),F280=double(),F320=double(),F350=double(),F380=double())
YZbefore_averages <- aggregate(YZbefore[,5:24], list(YZbefore$Vowel), mean)
#calculate averages per vowel, save in new DF
#TWafter_differences <- data.frame(Vowel=character(),EndTime=double(),duration=double(),F120=double(),F150=double(),F180=double(),F220=double(),F250=double(),F280=double(),F320=double(),F350=double(),F380=double())
YZbefore_averages <- aggregate(YZbefore[,5:22], list(YZbefore$Vowel), mean)
View(YZbefore_averages)
#calculate averages per vowel, save in new DF
#TWafter_differences <- data.frame(Vowel=character(),EndTime=double(),duration=double(),F120=double(),F150=double(),F180=double(),F220=double(),F250=double(),F280=double(),F320=double(),F350=double(),F380=double())
YZafter_averages <- aggregate(YZafter[,5:22], list(YZafter$Vowel), mean)
View(YZafter_averages)
#calculate distance
YZafter_differences <- YZafter_averages[,-1]-comb_averages[,-1]
View(comb_averages)
rm(YZafter)
rm(YZafter_averages)
rm(YZbefore)
rm(YZbefore_averages)
library(readxl)
YZ_after_results_enc <- read_excel("Desktop/YZ Annotated/YZ_after_results_enc.xlsx")
View(YZ_after_results_enc)
library(readxl)
YZafter <- read_excel("Desktop/YZ Annotated/YZ_after_results_enc.xlsx")
View(YZafter)
rm(YZ_after_results_enc)
library(readxl)
YZbefore <- read_excel("Desktop/YZ Annotated/YZ_before_results_enc.xlsx",
sheet = "Sheet1")
View(YZbefore)
YZafter$F120B <- normBark(YZafter$`F1 20%`)
YZafter$F150B <- normBark(YZafter$`F1 50%`)
YZafter$F180B <- normBark(YZafter$`F1 80%`)
YZafter$F220B <- normBark(YZafter$`F2 20%`)
YZafter$F250B <- normBark(YZafter$`F2 50%`)
YZafter$F280B <- normBark(YZafter$`F2 80%`)
YZafter$F320B <- normBark(YZafter$`F3 20%`)
YZafter$F350B <- normBark(YZafter$`F3 50%`)
YZafter$F380B <- normBark(YZafter$`F3 80%`)
View(TWafter_averages)
View(TWafter)
YZbefore$F120B <- normBark(YZbefore$`F1 20%`)
YZbefore$F150B <- normBark(YZbefore$`F1 50%`)
YZbefore$F180B <- normBark(YZbefore$`F1 80%`)
YZbefore$F220B <- normBark(YZbefore$`F2 20%`)
YZbefore$F250B <- normBark(YZbefore$`F2 50%`)
YZbefore$F280B <- normBark(YZbefore$`F2 80%`)
YZbefore$F320B <- normBark(YZbefore$`F3 20%`)
YZbefore$F350B <- normBark(YZbefore$`F3 50%`)
YZbefore$F380B <- normBark(YZbefore$`F3 80%`)
YZafter_averages <- aggregate(YZafter[,5:22], list(YZafter$Vowel), mean)
#calculate averages per vowel, save in new DF
#TWafter_differences <- data.frame(Vowel=character(),EndTime=double(),duration=double(),F120=double(),F150=double(),F180=double(),F220=double(),F250=double(),F280=double(),F320=double(),F350=double(),F380=double())
YZbefore_averages <- aggregate(YZbefore[,5:22], list(YZbefore$Vowel), mean)
#calculate distance
YZafter_differences <- YZafter_averages[,-1]-comb_averages[,-1]
YZafter_differences$Vowel <- comb_averages[1]
YZafter_differences <- YZafter_differences[,c(21,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)]
names(YZafter_differences)[names(YZafter_differences) == 'Vowel.Group.1'] <- 'Vowel'
#Euclidian distance (barks)
YZafter_differences$eucF120F220 <- sqrt(YZafter_differences$F120B^2+YZafter_differences$F220B^2)
YZafter_differences$eucF150F250 <- sqrt(YZafter_differences$F150B^2+YZafter_differences$F250B^2)
YZafter_differences$eucF180F280 <- sqrt(YZafter_differences$F180B^2+YZafter_differences$F280B^2)
#calculate distance
YZafter_differences <- YZafter_averages[,-1]-comb_averages[,-1]
YZafter_differences$Vowel <- comb_averages[1]
YZafter_differences <- YZafter_differences[,c(21,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)]
names(YZafter_differences)[names(YZafter_differences) == 'Vowel.Group.1'] <- 'Vowel'
#calculate averages per vowel, save in new DF
YZafter_differences <- data.frame(Vowel=character(),EndTime=double(),duration=double(),F120=double(),F150=double(),F180=double(),F220=double(),F250=double(),F280=double(),F320=double(),F350=double(),F380=double())
#calculate averages per vowel, save in new DF
YZbefore_differences <- data.frame(Vowel=character(),EndTime=double(),duration=double(),F120=double(),F150=double(),F180=double(),F220=double(),F250=double(),F280=double(),F320=double(),F350=double(),F380=double())
#calculate distance
YZafter_differences <- YZafter_averages[,-1]-comb_averages[,-1]
YZafter_differences$Vowel <- comb_averages[1]
YZafter_differences <- YZafter_differences[,c(21,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)]
names(YZafter_differences)[names(YZafter_differences) == 'Vowel.Group.1'] <- 'Vowel'
#Euclidian distance (barks)
YZafter_differences$eucF120F220 <- sqrt(YZafter_differences$F120B^2+YZafter_differences$F220B^2)
YZafter_differences$eucF150F250 <- sqrt(YZafter_differences$F150B^2+YZafter_differences$F250B^2)
YZafter_differences$eucF180F280 <- sqrt(YZafter_differences$F180B^2+YZafter_differences$F280B^2)
View(YZafter_averages)
View(YZbefore_averages)
YZbefore_averages <- aggregate(YZbefore[,5:], list(YZbefore$Vowel), mean)
YZbefore_averages <- aggregate(YZbefore[,5:24], list(YZbefore$Vowel), mean)
YZbefore_averages <- aggregate(YZbefore[,5:23], list(YZbefore$Vowel), mean)
YZafter_averages <- aggregate(YZafter[,5:23], list(YZafter$Vowel), mean)
View(YZafter_averages)
comb_averages$`End Time (s)` <- NULL
View(comb_averages)
YZafter_averages <- aggregate(YZafter[,5:23], list(YZafter$Vowel), mean)
#calculate distance
YZafter_differences <- YZafter_averages[,-1]-comb_averages[,-1]
YZafter_differences$Vowel <- comb_averages[1]
YZafter_differences <- YZafter_differences[,c(21,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20)]
names(YZafter_differences)[names(YZafter_differences) == 'Vowel.Group.1'] <- 'Vowel'
#calculate distance
YZafter_differences <- YZafter_averages[,-1]-comb_averages[,-1]
YZafter_differences$Vowel <- comb_averages[1]
YZafter_differences <- YZafter_differences[,c(20,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)]
names(YZafter_differences)[names(YZafter_differences) == 'Vowel.Group.1'] <- 'Vowel'
#Euclidian distance (barks)
YZafter_differences$eucF120F220 <- sqrt(YZafter_differences$F120B^2+YZafter_differences$F220B^2)
YZafter_differences$eucF150F250 <- sqrt(YZafter_differences$F150B^2+YZafter_differences$F250B^2)
YZafter_differences$eucF180F280 <- sqrt(YZafter_differences$F180B^2+YZafter_differences$F280B^2)
#calculate distance
YZbefore_differences <- YZbefore_averages[,-1]-comb_averages[,-1]
YZbefore_differences$Vowel <- comb_averages[1]
YZbefore_differences <- YZbefore_differences[,c(20,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19)]
names(YZbefore_differences)[names(YZbefore_differences) == 'Vowel.Group.1'] <- 'Vowel'
#Euclidian distance (barks)
YZbefore_differences$eucF120F220 <- sqrt(YZbefore_differences$F120B^2+YZbefore_differences$F220B^2)
YZbefore_differences$eucF150F250 <- sqrt(YZbefore_differences$F150B^2+YZbefore_differences$F250B^2)
YZbefore_differences$eucF180F280 <- sqrt(YZbefore_differences$F180B^2+YZbefore_differences$F280B^2)
View(YZafter_differences)
View(YZbefore_differences)
#plot with tokens Barks (no gender groups)
with(YZbefore, plotVowels(F120B, F220B, vowel = Vowel, var.sty.by = Vowel, var.col.by = Vowel, plot.tokens = TRUE, pch.tokens = Vowel, pretty = TRUE, xlim = c(16, 5),
ylim = c(9, 2), alpha.tokens = 0.2, plot.means = TRUE, pch.means = Vowel, ellipse.line = TRUE))
ylim = c(9, 2), alpha.tokens = 0.2, plot.means = TRUE, pch.means = Vowel)
#plot with tokens Barks (no gender groups)
with(YZbefore, plotVowels(F120B, F220B, vowel = Vowel, var.sty.by = Vowel, var.col.by = Vowel, plot.tokens = TRUE, pch.tokens = Vowel, pretty = TRUE, xlim = c(16, 5),
ylim = c(9, 2), alpha.tokens = 0.2, plot.means = TRUE, pch.means = Vowel))
#plot with tokens Barks (no gender groups)
with(YZafter, plotVowels(F120B, F220B, vowel = Vowel, var.sty.by = Vowel, var.col.by = Vowel, plot.tokens = TRUE, pch.tokens = Vowel, pretty = TRUE, xlim = c(16, 5),
ylim = c(9, 2), alpha.tokens = 0.2, plot.means = TRUE, pch.means = Vowel))
#plot with tokens Barks (no gender groups)
with(YZbefore, plotVowels(F120B, F220B, vowel = Vowel, var.sty.by = Vowel, var.col.by = Vowel, plot.tokens = TRUE, pch.tokens = Vowel, pretty = TRUE, xlim = c(16, 5),
ylim = c(9, 2), alpha.tokens = 0.2, plot.means = TRUE, pch.means = Vowel))
blogdown::build_site()
setwd("~/Desktop/Desktop Files/NewWebsite/nickballou")
blogdown::build_site()
blogdown::serve_site()
blogdown::serve_site()
setwd("~/Desktop/Desktop Files/NewWebsite/nickballou")
blogdown::build_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::stop_server()
blogdown::build_site()
blogdown::serve_site()
blogdown::install_theme("default")
blogdown::build_site()
blogdown::new_post("Welcome")
blogdown::hugo_version()
blogdown::hugo_server()
blogdown::build_site()
nitem <- c(ingroup = 25, outgroup = 25)
sum(nitem)
nrow(nitem)
summary(nitem)
head(nitem)
nitem[1,]
nitem[1]
nitem[2]
nitem["outgroup"]
nitem["ingroup"]
c("ingroup" = 5, "outgroup" = 5, "test" = 6)
c("ingroup" = 5, "outgroup" = 5, "test" = 8)
n <- c("ingroup" = 5, "outgroup" = 5, "test" = 8)
n
n[1]
n[2]
n[1]+n[2]
n[1]*n[2]
n[2]*n[1]
c(1:64)
rice <- c(1:64)
rice^2
sum(rice^2)
sum(rice^2)/6400
?aes
??aes
?runif
demo("colors")
?mtext
?text
paste?
j
?paste
blogdown::new_post()
library(blogdown)
install.packages("blogdown")
library(blogdown)
blogdown::new_post()
blogdown::new_post("Imposter Syndrom","/content/posts")
library(blogdown)
blogdown::serve_site()
blogdown::build_site()
install.packages("cluster")
hugo::buildwebsite()
Sys.which("git")
library(hugo)
library(blogdown)
blogdown::build_site()
blogdown::install_hugo()
blogdown::update_hugo()
git status
install.packages("TOSTER")
if (!require(TOSTER)) {install.packages('TOSTER')}
library(TOSTER)
TOSTone.raw(m = 4.71,
mu = 0,
sd = 0.931,
n = 33,
low_eqbound = 1,
high_eqbound = 10,
alpha = 0.05)
# Daniel Lakens, 2019.
# This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. https://creativecommons.org/licenses/by-nc-sa/4.0/
if (!require(TOSTER)) {install.packages('TOSTER')}
library(TOSTER)
TOSTone.raw(m = 4.71,
mu = 0,
sd = 0.931,
n = 33,
low_eqbound = 3,
high_eqbound = 10,
alpha = 0.05)
# Daniel Lakens, 2019.
# This work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License. https://creativecommons.org/licenses/by-nc-sa/4.0/
blogdown::build_site()
blogdown::serve_site()
setwd("~/Desktop/Desktop Files/NewWebsite/nickballou/content")
citr:::insert_citation()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
library(blogdown)
blogdown::new_post()
setwd("~/Desktop/Desktop Files/Website/Hugo Site/content/posts")
blogdown::new_post("Misunderstandings of SDT in Video Games, Part 1: Basic Psychological Needs")
blogdown::serve_site()
Now, it should be pretty obvious that relatedness satisfaction is possible in multiplayer games. You can join a guild, chat with teammates, strategize, contribute with a unique role, etc etc etc. And this is the context in which relatedness has almost exclusively been studied: in multiplayer games (and specifically MMOs). So here, I want to focus on why relatedness still matters in non-multiplayer games. I’m basing a large portion of this section on an excellent paper by April Tyack and Peta Wyeth<sup>5</sup>, who describe three ways players may feel relatedness in a single-player context.
blogdown::update_hugo()
blogdown::stop_server()
blogdown::serve_site()
setwd("~/Desktop/Desktop Files/Website/Testing")
blogdown::new_site()
blogdown::stop_server()
setwd("~/Desktop/Desktop Files/Website/Testing")
blogdown::serve_site()
blogdown::update_hugo()
blogdown::update_hugo(force = TRUE)
blogdown::install_hugo(force = TRUE)
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
blogdown::hugo_version()
blogdown::stop_server()
blogdown::serve_site()
blogdown::stop_server()
blogdown::serve_site()
